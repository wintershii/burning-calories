<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.burn.burningcalories.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.burn.burningcalories.domain.User">
    <constructor>
      <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="gender" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="role" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="height" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="weight" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="birth" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="avatar_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="backgurand_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, gender, role, phone, email, height,weight,birth,avatar_url, backgurand_url, create_time,
    update_time
  </sql>
  <insert id="insert" parameterType="com.burn.burningcalories.domain.User">
    insert into burning_user (id, username, password, 
      gender, role, phone, 
      email, height, weight, 
      birth, avatar_url, backgurand_url, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{role,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{height,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, 
      #{birth,jdbcType=TIMESTAMP}, #{avatarUrl,jdbcType=VARCHAR}, #{backgurandUrl,jdbcType=VARCHAR}, 
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.burn.burningcalories.domain.User">
    insert into burning_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="backgurandUrl != null">
        backgurand_url,
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="updateTime != null">
        now(),
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=TIMESTAMP},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="backgurandUrl != null">
        #{backgurandUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="updateTime != null">
        now(),
      </if>
    </trim>
  </insert>


  <select id="checkUsername" parameterType="string" resultType="int">
    select count(1) from burning_user
    where username = #{username}
  </select>

  <select id="checkPhone" parameterType="string" resultType="int">
    select count(1) from burning_user
    where phone = #{phone}
  </select>

  <select id="checkEmail" parameterType="string" resultType="int">
    select count(1) from burning_user
    where email = #{email}
  </select>

  <select id="login" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List"/>
    from burning_user
    where username = #{username}
    and password = #{password}
  </select>

  <update id="updateAvatar" parameterType="map">
    update burning_user
    set avatar_url = #{url}
    where id = #{userId}
  </update>


  <update id="updateBackgurand" parameterType="map">
    update burning_user
    set avatar_url = #{url}
    where id = #{userId}
  </update>
</mapper>